version: "3"

services:
  proxy:
    image: quay.io/sentinelc/proxy:${PROXY_TAG}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volumes/ssl:/ssl
    env_file:
      - ./proxy.env
    networks:
      - proxy

  api_db:
    image: postgres:14.1
    restart: always
    env_file:
      - ./api_db.env
    networks:
      - django
    volumes:
      - ./volumes/api_db/backup:/backup

  api_redis:
    image: redis:6.2.6-alpine
    restart: always
    networks:
      - django

  api:
    image: quay.io/sentinelc/api:${API_TAG}
    restart: always
    depends_on:
      - api_db
      - api_redis
    env_file:
      - ./api.env
    networks:
      - proxy
      - django
    volumes:
      - ./volumes/api:/storage

  celery:
    image: quay.io/sentinelc/api:${API_TAG}
    restart: always
    depends_on:
      - api_db
      - api_redis
    env_file:
      - ./api.env
    command: celery -A chinook.api worker -l INFO
    networks:
      - django
    volumes:
      - ./volumes/api:/storage

  beat:
    image: quay.io/sentinelc/api:${API_TAG}
    restart: always
    depends_on:
      - api_db
      - api_redis
    env_file:
      - ./api.env
    command: celery -A chinook.api beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    networks:
      - django
    volumes:
      - ./volumes/api:/storage

  keycloak_db:
    image: postgres:14.1
    restart: always
    env_file:
      - ./keycloak_db.env
    networks:
      - keycloak
    volumes:
      - ./volumes/keycloak_db/backup:/backup

  keycloak:
    image: quay.io/sentinelc/keycloak:${KEYCLOAK_TAG}
    restart: always
    depends_on:
      - keycloak_db
    env_file:
      - ./keycloak.env
    networks:
      - proxy
      - keycloak

  front:
    image: quay.io/sentinelc/front:${FRONT_TAG}
    restart: always
    env_file:
      - ./front.env
    networks:
      - proxy

  vpnrouter:
    image: quay.io/sentinelc/vpnrouter:${VPNROUTER_TAG}
    restart: always
    env_file:
      - ./vpnrouter.env
    networks:
      - django
      - proxy
    cap_add:
     - NET_ADMIN
    volumes:
      - ./volumes/vpnrouter:/etc/wireguard
    ports:
      - "20208:20208/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

  portal:
    image: quay.io/sentinelc/portal:${PORTAL_TAG}
    restart: always
    env_file:
      - ./portal.env
    networks:
      - proxy

  logger:
    image: quay.io/sentinelc/logger:${LOGGER_TAG}
    restart: always
    env_file:
      - ./logger.env
    networks:
      - proxy
      - logger

  logger_redis:
    image: redis:6.2.6-alpine
    restart: always
    networks:
      - logger

networks:
  proxy:  # exposed HTTP services
  django:  # django + api_db + api_redis
  keycloak:  # keycloak + keycloak_db
  logger: # logger + loger_redis
